{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel API with Swagger",
        "description": "API documentation for Laravel using Swagger",
        "license": {
            "name": "MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local"
        },
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate the user and generate token",
                "operationId": "3454c44314ed6d6b97a92abf6dc2df3b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/loginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "fc119ed3b223f0422310f06eefc8f542",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/registerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout authenticated user",
                "operationId": "00d3150b2027492394868c44c5f59d67",
                "responses": {
                    "200": {
                        "description": "Logged out successfully"
                    },
                    "401": {
                        "description": "No active session to log out"
                    }
                }
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get authenticated user details",
                "operationId": "ba2ac9d6464e42b7822e18939cdbd4a0",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/v1/verify-token": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user details",
                "operationId": "748a72f1f46ff876c7df29d24463df82",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/v1/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get all brands",
                "operationId": "bf604190b3b00ac1433f0bdd447dee1b",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by brand name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Filter by country of origin",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user ID who created the brand",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/brand"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No brands found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No brands found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a new brand",
                "operationId": "15770920624b5d889f3e9a65fd5779c0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/storeBrandRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brand created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Brand created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/brands/{id}": {
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update a brand",
                "operationId": "5d63b5d19a99cbf56bf4f82d828b110f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/updateBrandRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Brand updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Brand not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete a brand",
                "operationId": "acd0838762fe95b3a645ece9d1770fd6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Brand deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Brand not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete brand"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "operationId": "2a77c245fe1d19e31652c345836feabd",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/category"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "4ceb7fa05c2b7269cc274b6a4b8f7e5e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/storeCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create category successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to create category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create category!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something happened in Creating category"
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/categories/{id}": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "7143e7e3359e5db3566461efa50faa03",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/updateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "042b386e936f97172439c8f33b2d7a4f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete category successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category is not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something happened in Deleting category"
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Display a listing of products",
                "operationId": "a31062dc8c5c8351b96c47fbe4f0534e",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by product name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Filter by brand ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by product status (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at_start",
                        "in": "query",
                        "description": "Filter by creation date start (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "created_at_end",
                        "in": "query",
                        "description": "Filter by creation date end (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/productPagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No products found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No products found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Store a newly created product",
                "operationId": "55c957b76252aec7cefa0f9fcb5677fc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/storeProduct"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Invalid request!"
                    },
                    "500": {
                        "description": "Internal Error!"
                    }
                }
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Display the specified product",
                "operationId": "275c4d703cdf48428bd7d6542154af8a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Product not found!"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update the specified product",
                "operationId": "d23c5cabb1aa9757915f62f375f44d51",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/updateProduct"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Product not found!"
                    },
                    "422": {
                        "description": "Unprocessable Entity!"
                    },
                    "500": {
                        "description": "Internal Error!"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Remove the specified product",
                "operationId": "082b04e8a7c8b26ec6c42f977bfbdc99",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Product not found!"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "category": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Category name",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "productPagination": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/product"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://api.example.com/api/v1/products?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://api.example.com/api/v1/products?page=10"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": "http://api.example.com/api/v1/products?page=2",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://api.example.com/api/v1/products"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 150
                    }
                },
                "type": "object"
            },
            "loginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "Email for login",
                        "type": "string",
                        "format": "string"
                    },
                    "password": {
                        "description": "The account's password",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "registerRequest": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "description": "Enter name for the account",
                        "type": "string"
                    },
                    "email": {
                        "description": "Enter email for the account",
                        "type": "string"
                    },
                    "password": {
                        "description": "Enter the password",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "storeProduct": {
                "required": [
                    "name",
                    "brand",
                    "price",
                    "quantity",
                    "options",
                    "category_id",
                    "stock",
                    "user_id"
                ],
                "properties": {
                    "name": {
                        "description": "Product name",
                        "type": "string"
                    },
                    "brand": {
                        "description": "Product brand",
                        "type": "string"
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float"
                    },
                    "category_id": {
                        "description": "Category ID",
                        "type": "integer"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string",
                        "nullable": true
                    },
                    "short_description": {
                        "description": "Short product description",
                        "type": "string",
                        "nullable": true
                    },
                    "stock": {
                        "description": "Stock quantity",
                        "type": "integer",
                        "example": 10
                    },
                    "options": {
                        "description": "Available product options (color, size, etc.)",
                        "type": "object",
                        "example": {
                            "color": [
                                "red",
                                "blue"
                            ],
                            "size": [
                                "small",
                                "medium"
                            ]
                        }
                    },
                    "discount": {
                        "description": "Discount percentage",
                        "type": "integer",
                        "example": 10,
                        "nullable": true
                    },
                    "is_top": {
                        "description": "Is top product flag",
                        "type": "boolean",
                        "nullable": true
                    },
                    "status": {
                        "description": "Product status",
                        "type": "string",
                        "enum": [
                            "available",
                            "out_of_stock",
                            "discontinued"
                        ],
                        "nullable": true
                    },
                    "rating": {
                        "description": "Product rating",
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "reviews": {
                        "description": "Number of reviews",
                        "type": "integer",
                        "example": 10,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "updateProduct": {
                "required": [
                    "name",
                    "description",
                    "price",
                    "quantity",
                    "options"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "options": {
                        "description": "Available product options",
                        "type": "array",
                        "items": {
                            "properties": {
                                "color": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "size": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "storeBrandRequest": {
                "required": [
                    "name",
                    "country",
                    "user_id"
                ],
                "properties": {
                    "name": {
                        "description": "Brand name",
                        "type": "string",
                        "example": "Nike"
                    },
                    "description": {
                        "description": "Brand description",
                        "type": "string",
                        "example": "Sportswear company"
                    },
                    "country": {
                        "description": "Country of origin",
                        "type": "string",
                        "example": "USA"
                    },
                    "website_url": {
                        "description": "Brand website URL",
                        "type": "string",
                        "example": "https://www.nike.com"
                    },
                    "is_active": {
                        "description": "Is brand active",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "storeCategoryRequest": {
                "required": [
                    "name",
                    "user_id"
                ],
                "properties": {
                    "name": {
                        "description": "Category name",
                        "type": "string",
                        "example": "Electronics"
                    },
                    "description": {
                        "description": "Category description",
                        "type": "string",
                        "example": "Electronic devices and accessories",
                        "nullable": true
                    },
                    "is_active": {
                        "description": "Is category active",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "updateBrandRequest": {
                "properties": {
                    "name": {
                        "description": "Brand name",
                        "type": "string",
                        "example": "Nike"
                    },
                    "description": {
                        "description": "Brand description",
                        "type": "string",
                        "example": "Sportswear company",
                        "nullable": true
                    },
                    "country": {
                        "description": "Country of origin",
                        "type": "string",
                        "example": "USA"
                    },
                    "website_url": {
                        "description": "Brand website URL",
                        "type": "string",
                        "example": "https://www.nike.com",
                        "nullable": true
                    },
                    "is_active": {
                        "description": "Is brand active",
                        "type": "boolean",
                        "example": true
                    },
                    "user_id": {
                        "description": "User ID who created the brand",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "updateCategoryRequest": {
                "properties": {
                    "name": {
                        "description": "Category name",
                        "type": "string",
                        "example": "Electronics"
                    },
                    "description": {
                        "description": "Category description",
                        "type": "string",
                        "example": "Electronic devices and accessories",
                        "nullable": true
                    },
                    "is_active": {
                        "description": "Is category active",
                        "type": "boolean",
                        "example": true
                    },
                    "user_id": {
                        "description": "User ID who created the category",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "brand": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Nike"
                    },
                    "description": {
                        "type": "string",
                        "example": "Sportswear company"
                    },
                    "country": {
                        "type": "string",
                        "example": "USA"
                    },
                    "website_url": {
                        "type": "string",
                        "example": "https://www.nike.com"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Category name",
                        "type": "string",
                        "example": "Electronics"
                    },
                    "description": {
                        "description": "Category description",
                        "type": "string",
                        "example": "Electronic devices and accessories",
                        "nullable": true
                    },
                    "is_active": {
                        "description": "Is category active",
                        "type": "boolean",
                        "example": true
                    },
                    "user_id": {
                        "description": "User ID who created the category",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "product": {
                "required": [
                    "name",
                    "brand",
                    "price",
                    "quantity",
                    "options"
                ],
                "properties": {
                    "id": {
                        "description": "Product ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Product name",
                        "type": "string"
                    },
                    "brand": {
                        "description": "Product brand",
                        "type": "string"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string"
                    },
                    "short_description": {
                        "description": "Short product description",
                        "type": "string"
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float"
                    },
                    "stock": {
                        "description": "Stock quantity (alias for quantity)",
                        "type": "integer"
                    },
                    "options": {
                        "description": "Available product options (color, size, etc.)",
                        "type": "object",
                        "example": {
                            "color": [
                                "red",
                                "blue"
                            ],
                            "size": [
                                "small",
                                "medium"
                            ]
                        }
                    },
                    "discount": {
                        "description": "Discount percentage",
                        "type": "integer",
                        "example": 10
                    },
                    "is_top": {
                        "description": "Is top product flag",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Product status",
                        "type": "string",
                        "enum": [
                            "available",
                            "out_of_stock",
                            "discontinued"
                        ]
                    },
                    "rating": {
                        "description": "Product rating",
                        "type": "integer",
                        "example": 5
                    },
                    "reviews": {
                        "description": "Number of reviews",
                        "type": "integer",
                        "example": 10
                    },
                    "images_id": {
                        "description": "Array of image IDs",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "user_id": {
                        "description": "ID of the user who created the product",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "user": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Products",
            "description": "API Endpoints for Products"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for Authenticating"
        },
        {
            "name": "Users",
            "description": "API Endpoints for Users"
        },
        {
            "name": "Brands",
            "description": "Brands"
        },
        {
            "name": "Categories",
            "description": "Categories"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}